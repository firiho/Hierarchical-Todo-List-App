{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTaskPage = () => {\n  _s();\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: '',\n    subtasks: [{\n      id: 1.1,\n      title: '',\n      subsubtasks: [{\n        id: 1.11,\n        title: ''\n      }]\n    }]\n  }]);\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity; // Ensure this matches the payload structure you set in Flask\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    // Flatten tasks to include parent_id and user_id\n    const flattenedTasks = tasks.flatMap(task => [{\n      ...task,\n      parent_id: null,\n      user_id: userId\n    }, ...task.subtasks.flatMap(subtask => [{\n      ...subtask,\n      parent_id: task.id,\n      user_id: userId\n    }, ...subtask.subsubtasks.map(subsubtask => ({\n      ...subsubtask,\n      parent_id: subtask.id,\n      user_id: userId\n    }))])]);\n    try {\n      // Replace 'your-api-endpoint' with your actual endpoint\n      const response = await fetch('http://127.0.0.1:5000/new-list', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n          // Include auth token if needed\n        },\n        body: JSON.stringify(flattenedTasks)\n      });\n      if (!response.ok) throw new Error('Network response was not ok.');\n      // Handle success\n      console.log('Tasks successfully submitted:', await response.json());\n    } catch (error) {\n      console.error('Error submitting tasks:', error);\n    }\n  };\n\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = Math.max(0, ...task.subtasks.map(st => st.id)) + 0.1;\n          task.subtasks.push({\n            id: newSubtaskId,\n            title: '',\n            subsubtasks: []\n          });\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newSubSubtaskId = Math.max(0, ...subtask.subsubtasks.map(sst => sst.id)) + 0.01;\n              subtask.subsubtasks.push({\n                id: newSubSubtaskId,\n                title: ''\n              });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: `title-${task.id}`,\n            placeholder: \"Title\",\n            value: task.title,\n            onChange: e => handleTaskChange(task.id, null, null, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addSubTask(task.id),\n            children: \"Add Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subtask.id}`,\n              placeholder: \"Subtask Title\",\n              value: subtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, null, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addSubTask(task.id, subtask.id),\n              children: \"Add Sub-Subtask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), subtask.subsubtasks.map(subsubtask => /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subsubtask.id}`,\n              placeholder: \"Sub-Subtask Title\",\n              value: subsubtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)\n            }, subsubtask.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this))]\n          }, subtask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this))]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewTaskPage, \"R0fVzDtcTaPJJ572Ft68JoB9W5E=\");\n_c = NewTaskPage;\nexport default NewTaskPage;\nvar _c;\n$RefreshReg$(_c, \"NewTaskPage\");","map":{"version":3,"names":["React","useState","Link","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTaskPage","_s","tasks","setTasks","id","title","subtasks","subsubtasks","getCurrentUserId","token","localStorage","getItem","decodedToken","sub","identity","error","console","handleSubmit","event","preventDefault","userId","flattenedTasks","flatMap","task","parent_id","user_id","subtask","map","subsubtask","response","fetch","method","headers","body","JSON","stringify","ok","Error","log","json","addSubTask","taskId","subtaskId","newSubtaskId","Math","max","st","push","forEach","newSubSubtaskId","sst","handleTaskChange","subsubtaskId","value","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","taskIndex","required","type","name","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst NewTaskPage = () => {\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([\n    { id: 1, title: '', subtasks: [{ id: 1.1, title: '', subsubtasks: [{ id: 1.11, title: '' }] }] },\n  ]);\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n  \n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity; // Ensure this matches the payload structure you set in Flask\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    // Flatten tasks to include parent_id and user_id\n    const flattenedTasks = tasks.flatMap(task => [\n      { ...task, parent_id: null, user_id: userId },\n      ...task.subtasks.flatMap(subtask => [\n        { ...subtask, parent_id: task.id, user_id: userId },\n        ...subtask.subsubtasks.map(subsubtask => ({ ...subsubtask, parent_id: subtask.id, user_id: userId }))\n      ])\n    ]);\n\n    try {\n      // Replace 'your-api-endpoint' with your actual endpoint\n      const response = await fetch('http://127.0.0.1:5000/new-list', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // Include auth token if needed\n        },\n        body: JSON.stringify(flattenedTasks),\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok.');\n      // Handle success\n      console.log('Tasks successfully submitted:', await response.json());\n    } catch (error) {\n      console.error('Error submitting tasks:', error);\n    }\n};\n\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = Math.max(0, ...task.subtasks.map(st => st.id)) + 0.1;\n          task.subtasks.push({ id: newSubtaskId, title: '', subsubtasks: [] });\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newSubSubtaskId = Math.max(0, ...subtask.subsubtasks.map(sst => sst.id)) + 0.01;\n              subtask.subsubtasks.push({ id: newSubSubtaskId, title: '' });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  return (\n    <>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n\n      <div className=\"new-task-page\">\n        <h2>Add New Task</h2>\n        <form onSubmit={handleSubmit}>\n          {tasks.map((task, taskIndex) => (\n            <div key={task.id}>\n              <input\n                required\n                type=\"text\"\n                name={`title-${task.id}`}\n                placeholder=\"Title\"\n                value={task.title}\n                onChange={(e) => handleTaskChange(task.id, null, null, e.target.value)}\n              />\n              <button type=\"button\" onClick={() => addSubTask(task.id)}>Add Subtask</button>\n\n              {task.subtasks.map((subtask) => (\n                <div key={subtask.id}>\n                  <input\n                    required\n                    type=\"text\"\n                    name={`title-${subtask.id}`}\n                    placeholder=\"Subtask Title\"\n                    value={subtask.title}\n                    onChange={(e) => handleTaskChange(task.id, subtask.id, null, e.target.value)}\n                  />\n                  <button type=\"button\" onClick={() => addSubTask(task.id, subtask.id)}>Add Sub-Subtask</button>\n\n                  {subtask.subsubtasks.map((subsubtask) => (\n                    <input\n                      key={subsubtask.id}\n                      required\n                      type=\"text\"\n                      name={`title-${subsubtask.id}`}\n                      placeholder=\"Sub-Subtask Title\"\n                      value={subsubtask.title}\n                      onChange={(e) => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)}\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n          ))}\n          <button type=\"submit\">Add Task</button>\n        </form>\n        </div>\n    </>\n    );\n};   \n\nexport default NewTaskPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTaskPage = () => {\n  _s();\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: '',\n    subtasks: [{\n      id: 1.1,\n      title: '',\n      subsubtasks: [{\n        id: 1.11,\n        title: ''\n      }]\n    }]\n  }]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Tasks:', tasks);\n    // Here, send 'tasks' to your backend or handle them as needed\n  };\n\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = Math.max(0, ...task.subtasks.map(st => st.id)) + 0.1;\n          task.subtasks.push({\n            id: newSubtaskId,\n            title: '',\n            subsubtasks: []\n          });\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newSubSubtaskId = Math.max(0, ...subtask.subsubtasks.map(sst => sst.id)) + 0.01;\n              subtask.subsubtasks.push({\n                id: newSubSubtaskId,\n                title: ''\n              });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: `title-${task.id}`,\n            placeholder: \"Title\",\n            value: task.title,\n            onChange: e => handleTaskChange(task.id, null, null, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addSubTask(task.id),\n            children: \"Add Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subtask.id}`,\n              placeholder: \"Subtask Title\",\n              value: subtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, null, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addSubTask(task.id, subtask.id),\n              children: \"Add Sub-Subtask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), subtask.subsubtasks.map(subsubtask => /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subsubtask.id}`,\n              placeholder: \"Sub-Subtask Title\",\n              value: subsubtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)\n            }, subsubtask.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this))]\n          }, subtask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewTaskPage, \"R0fVzDtcTaPJJ572Ft68JoB9W5E=\");\n_c = NewTaskPage;\nexport default NewTaskPage;\nvar _c;\n$RefreshReg$(_c, \"NewTaskPage\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTaskPage","_s","tasks","setTasks","id","title","subtasks","subsubtasks","handleSubmit","event","preventDefault","console","log","addSubTask","taskId","subtaskId","map","task","newSubtaskId","Math","max","st","push","forEach","subtask","newSubSubtaskId","sst","handleTaskChange","subsubtaskId","value","subsubtask","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","taskIndex","required","type","name","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NewTaskPage = () => {\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([\n    { id: 1, title: '', subtasks: [{ id: 1.1, title: '', subsubtasks: [{ id: 1.11, title: '' }] }] },\n  ]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log('Tasks:', tasks);\n    // Here, send 'tasks' to your backend or handle them as needed\n  };\n\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = Math.max(0, ...task.subtasks.map(st => st.id)) + 0.1;\n          task.subtasks.push({ id: newSubtaskId, title: '', subsubtasks: [] });\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newSubSubtaskId = Math.max(0, ...subtask.subsubtasks.map(sst => sst.id)) + 0.01;\n              subtask.subsubtasks.push({ id: newSubSubtaskId, title: '' });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  return (\n    <>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n\n      <div className=\"new-task-page\">\n        <h2>Add New Task</h2>\n        <form onSubmit={handleSubmit}>\n          {tasks.map((task, taskIndex) => (\n            <div key={task.id}>\n              <input\n                required\n                type=\"text\"\n                name={`title-${task.id}`}\n                placeholder=\"Title\"\n                value={task.title}\n                onChange={(e) => handleTaskChange(task.id, null, null, e.target.value)}\n              />\n              <button type=\"button\" onClick={() => addSubTask(task.id)}>Add Subtask</button>\n\n              {task.subtasks.map((subtask) => (\n                <div key={subtask.id}>\n                  <input\n                    required\n                    type=\"text\"\n                    name={`title-${subtask.id}`}\n                    placeholder=\"Subtask Title\"\n                    value={subtask.title}\n                    onChange={(e) => handleTaskChange(task.id, subtask.id, null, e.target.value)}\n                  />\n                  <button type=\"button\" onClick={() => addSubTask(task.id, subtask.id)}>Add Sub-Subtask</button>\n\n                  {subtask.subsubtasks.map((subsubtask) => (\n                    <input\n                      key={subsubtask.id}\n                      required\n                      type=\"text\"\n                      name={`title-${subsubtask.id}`}\n                      placeholder=\"Sub-Subtask Title\"\n                      value={subsubtask.title}\n                      onChange={(e) => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)}\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n          ))}\n          <button type=\"submit\">Add Task</button>\n        </form>\n        </div>\n    </>\n    );\n}   \n\nexport default NewTaskPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTaskPage = () => {\n  _s();\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState();\n  const [nextId, setNextId] = useState();\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity;\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const getNextTaskId = () => {\n      return fetch('http://127.0.0.1:5000/next-id', {\n        // Ensure the URL matches your Flask route\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => data.next_id); // Assuming the response JSON contains `next_id`\n    };\n    getNextTaskId().then(id => setNextId(id));\n    console.log('The next id should be', nextId);\n  }, [nextId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    // Flatten tasks to include parent_id and user_id\n    const flattenedTasks = tasks.flatMap(task => {\n      const mainTask = {\n        ...task,\n        parent_id: null,\n        user_id: userId\n      };\n      let subTasksFlattened = task.subtasks.flatMap(subtask => {\n        let subTaskWithNewParentId = {\n          ...subtask,\n          parent_id: nextId + 1,\n          user_id: userId\n        };\n        let subSubTasksFlattened = subtask.subsubtasks.map(subsubtask => {\n          return {\n            ...subsubtask,\n            parent_id: subtask.id,\n            user_id: userId\n          }; // Assuming subtask ID is sequential\n        });\n        return [subTaskWithNewParentId, ...subSubTasksFlattened];\n      });\n      return [mainTask, ...subTasksFlattened];\n    });\n    console.log('Flattened tasks:', flattenedTasks);\n    // try {\n    //   const response = await fetch('http://127.0.0.1:5000/new-list', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       // Include auth token if needed\n    //     },\n    //     body: JSON.stringify(flattenedTasks),\n    //   });\n\n    //   if (!response.ok) throw new Error('Network response was not ok.');\n    //   // Handle success\n    //   console.log('Tasks successfully submitted:', await response.json());\n    //   window.location.href = '/'; // Redirect to the dashboard\n    // } catch (error) {\n    //   console.error('Error submitting tasks:', error);\n    // }\n  };\n  const tempId = 1000000;\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = tempId + 1;\n          task.subtasks.push({\n            id: newSubtaskId,\n            title: '',\n            subsubtasks: []\n          });\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newSubSubtaskId = tempId + 1;\n              subtask.subsubtasks.push({\n                id: newSubSubtaskId,\n                title: ''\n              });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: `title-${task.id}`,\n            placeholder: \"Title\",\n            value: task.title,\n            onChange: e => handleTaskChange(task.id, null, null, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addSubTask(task.id),\n            children: \"Add Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subtask.id}`,\n              placeholder: \"Subtask Title\",\n              value: subtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, null, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addSubTask(task.id, subtask.id),\n              children: \"Add Sub-Subtask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), subtask.subsubtasks.map(subsubtask => /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subsubtask.id}`,\n              placeholder: \"Sub-Subtask Title\",\n              value: subsubtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)\n            }, subsubtask.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this))]\n          }, subtask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this))]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewTaskPage, \"W794q36FHXVCG2VU+6Ik6EA/Ni4=\");\n_c = NewTaskPage;\nexport default NewTaskPage;\nvar _c;\n$RefreshReg$(_c, \"NewTaskPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTaskPage","_s","tasks","setTasks","nextId","setNextId","getCurrentUserId","token","localStorage","getItem","decodedToken","sub","identity","error","console","getNextTaskId","fetch","method","headers","then","response","json","data","next_id","id","log","handleSubmit","event","preventDefault","userId","flattenedTasks","flatMap","task","mainTask","parent_id","user_id","subTasksFlattened","subtasks","subtask","subTaskWithNewParentId","subSubTasksFlattened","subsubtasks","map","subsubtask","tempId","addSubTask","taskId","subtaskId","newSubtaskId","push","title","forEach","newSubSubtaskId","handleTaskChange","subsubtaskId","value","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","taskIndex","required","type","name","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst NewTaskPage = () => {\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState();\n  const [nextId, setNextId] = useState();\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n  \n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity; \n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n\n  useEffect(() => {\n  const getNextTaskId = () => {\n    return fetch('http://127.0.0.1:5000/next-id', { // Ensure the URL matches your Flask route\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n    .then(response => response.json())\n    .then(data => data.next_id); // Assuming the response JSON contains `next_id`\n};\n    getNextTaskId().then(id => setNextId(id));\n    console.log('The next id should be', nextId);\n  }, [nextId]);\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    // Flatten tasks to include parent_id and user_id\n    const flattenedTasks = tasks.flatMap(task => {\n        const mainTask = { ...task, parent_id: null, user_id: userId };\n        let subTasksFlattened = task.subtasks.flatMap(subtask => {\n          let subTaskWithNewParentId = { ...subtask, parent_id: nextId + 1, user_id: userId };\n          let subSubTasksFlattened = subtask.subsubtasks.map(subsubtask => {\n            return { ...subsubtask, parent_id: subtask.id, user_id: userId }; // Assuming subtask ID is sequential\n          });\n          return [subTaskWithNewParentId, ...subSubTasksFlattened];\n        });\n      \n        return [mainTask, ...subTasksFlattened];\n      });\n      console.log('Flattened tasks:', flattenedTasks);\n    // try {\n    //   const response = await fetch('http://127.0.0.1:5000/new-list', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       // Include auth token if needed\n    //     },\n    //     body: JSON.stringify(flattenedTasks),\n    //   });\n\n    //   if (!response.ok) throw new Error('Network response was not ok.');\n    //   // Handle success\n    //   console.log('Tasks successfully submitted:', await response.json());\n    //   window.location.href = '/'; // Redirect to the dashboard\n    // } catch (error) {\n    //   console.error('Error submitting tasks:', error);\n    // }\n};\n    const tempId = 1000000\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = tempId + 1;\n          task.subtasks.push({ id: newSubtaskId, title: '', subsubtasks: [] });\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newSubSubtaskId = tempId + 1;\n              subtask.subsubtasks.push({ id: newSubSubtaskId, title: '' });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  return (\n    <>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n\n      <div className=\"new-task-page\">\n        <h2>Add New Task</h2>\n        <form onSubmit={handleSubmit}>\n          {tasks.map((task, taskIndex) => (\n            <div key={task.id}>\n              <input\n                required\n                type=\"text\"\n                name={`title-${task.id}`}\n                placeholder=\"Title\"\n                value={task.title}\n                onChange={(e) => handleTaskChange(task.id, null, null, e.target.value)}\n              />\n              <button type=\"button\" onClick={() => addSubTask(task.id)}>Add Subtask</button>\n\n              {task.subtasks.map((subtask) => (\n                <div key={subtask.id}>\n                  <input\n                    required\n                    type=\"text\"\n                    name={`title-${subtask.id}`}\n                    placeholder=\"Subtask Title\"\n                    value={subtask.title}\n                    onChange={(e) => handleTaskChange(task.id, subtask.id, null, e.target.value)}\n                  />\n                  <button type=\"button\" onClick={() => addSubTask(task.id, subtask.id)}>Add Sub-Subtask</button>\n\n                  {subtask.subsubtasks.map((subsubtask) => (\n                    <input\n                      key={subsubtask.id}\n                      required\n                      type=\"text\"\n                      name={`title-${subsubtask.id}`}\n                      placeholder=\"Sub-Subtask Title\"\n                      value={subsubtask.title}\n                      onChange={(e) => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)}\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n          ))}\n          <button type=\"submit\">Add Task</button>\n        </form>\n        </div>\n    </>\n    );\n};   \n\nexport default NewTaskPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
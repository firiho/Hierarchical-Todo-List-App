{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Kanban Web Application/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TaskColumn from '../components/TaskColumn';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfetch('http://localhost:5000/api/tasks', {\n  method: 'GET',\n  mode: 'cors'\n}).then(response => {\n  if (!response.ok) {\n    throw new Error('Network response was not ok!!!!!!!!!!!!');\n  }\n  return response.json();\n}).then(data => {\n  // Handle the response data\n}).catch(error => {\n  console.error('Error fetching tasks:!!!!!!!!!!!!!!!', error);\n});\nconst HomePage = () => {\n  _s();\n  const [tasks, setTasks] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:5000/api/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/new-task\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: Object.keys(tasks).map(column => /*#__PURE__*/_jsxDEV(TaskColumn, {\n        className: column,\n        title: column,\n        tasks: tasks[column]\n      }, column, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"F6FekvdsiAaqG5fWQ6gCTaTmnwI=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","TaskColumn","Link","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","fetch","method","mode","then","response","ok","Error","json","data","catch","error","console","HomePage","_s","tasks","setTasks","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","keys","map","column","title","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Kanban Web Application/src/pages/HomePage.js"],"sourcesContent":["import React from 'react';\nimport TaskColumn from '../components/TaskColumn';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nfetch('http://localhost:5000/api/tasks', {\n  method: 'GET',\n  mode: 'cors',\n})\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok!!!!!!!!!!!!');\n    }\n    return response.json();\n  })\n  .then(data => {\n    // Handle the response data\n  })\n  .catch(error => {\n    console.error('Error fetching tasks:!!!!!!!!!!!!!!!', error);\n  });\n\n\nconst HomePage = () => {\n  const [tasks, setTasks] = useState({});\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n\n  return (\n    <>\n    <nav>\n        <Link to=\"/new-task\">Add Task</Link>\n      </nav>\n    <div className=\"home-page\">\n      {Object.keys(tasks).map((column) => (\n        <TaskColumn className = {column} key={column} title={column} tasks={tasks[column]} />\n      ))}\n    </div>\n    </>\n  );\n};\n\nexport default HomePage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5CC,KAAK,CAAC,iCAAiC,EAAE;EACvCC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;EAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;EACZ;AAAA,CACD,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;EACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;AAC9D,CAAC,CAAC;AAGJ,MAAME,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,iCAAiC,CAAC,CACrCG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCJ,IAAI,CAACK,IAAI,IAAIO,QAAQ,CAACP,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA;MAAAmB,QAAA,eACInB,OAAA,CAACJ,IAAI;QAACwB,EAAE,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACRxB,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAN,QAAA,EACvBO,MAAM,CAACC,IAAI,CAACV,KAAK,CAAC,CAACW,GAAG,CAAEC,MAAM,iBAC7B7B,OAAA,CAACL,UAAU;QAAC8B,SAAS,EAAII,MAAO;QAAcC,KAAK,EAAED,MAAO;QAACZ,KAAK,EAAEA,KAAK,CAACY,MAAM;MAAE,GAA5CA,MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwC,CACrF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACJ,CAAC;AAEP,CAAC;AAACR,EAAA,CAtBID,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
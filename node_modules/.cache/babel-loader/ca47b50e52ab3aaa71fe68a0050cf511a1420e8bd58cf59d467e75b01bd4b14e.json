{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTaskPage = () => {\n  _s();\n  const [nextId, setNextId] = useState(10000000);\n  useEffect(() => {\n    const getNextTaskId = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/next-id', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        setNextId(data.next_id);\n      } catch (error) {\n        console.error('Failed to fetch nextId:', error);\n      }\n    };\n    getNextTaskId();\n  }, []);\n  useEffect(() => {\n    console.log('Next ID:', nextId);\n  }, [nextId]); // This effect runs whenever nextId changes\n\n  let tempId = 1000000;\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([{\n    id: nextId,\n    title: '',\n    subtasks: [{\n      id: nextId,\n      title: '',\n      subsubtasks: [{\n        id: tempId,\n        title: ''\n      }]\n    }]\n  }]);\n  const [numSub, setNumSub] = useState(1);\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity;\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    // Flatten tasks to include parent_id and user_id\n    const flattenedTasks = tasks.flatMap(task => [{\n      ...task,\n      parent_id: null,\n      user_id: userId\n    }, ...task.subtasks.flatMap(subtask => [{\n      ...subtask,\n      parent_id: task.id,\n      user_id: userId\n    }, ...subtask.subsubtasks.map(subsubtask => ({\n      ...subsubtask,\n      parent_id: subtask.id,\n      user_id: userId\n    }))])]);\n    console.log('Flattened tasks:', flattenedTasks);\n    // try {\n    //   const response = await fetch('http://127.0.0.1:5000/new-list', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       // Include auth token if needed\n    //     },\n    //     body: JSON.stringify(flattenedTasks),\n    //   });\n\n    //   if (!response.ok) throw new Error('Network response was not ok.');\n    //   // Handle success\n    //   console.log('Tasks successfully submitted:', await response.json());\n    //   window.location.href = '/'; // Redirect to the dashboard\n    // } catch (error) {\n    //   console.error('Error submitting tasks:', error);\n    // }\n  };\n\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          let newSubtaskId = taskId + numSub;\n          console.log('newSubtaskId:', newSubtaskId, numSub, taskId);\n          task.subtasks.push({\n            id: newSubtaskId,\n            title: '',\n            subsubtasks: []\n          });\n          setNumSub(numSub + 1);\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              let newsubsubtaskid = ++tempId;\n              subtask.subsubtasks.push({\n                id: newsubsubtaskid,\n                title: ''\n              });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: `title-${task.id}`,\n            placeholder: \"Title\",\n            value: task.title,\n            onChange: e => handleTaskChange(task.id, null, null, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addSubTask(task.id),\n            children: \"Add Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subtask.id}`,\n              placeholder: \"Subtask Title\",\n              value: subtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, null, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addSubTask(task.id, subtask.id),\n              children: \"Add Sub-Subtask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), subtask.subsubtasks.map(subsubtask => /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subsubtask.id}`,\n              placeholder: \"Sub-Subtask Title\",\n              value: subsubtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)\n            }, subsubtask.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this))]\n          }, subtask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this))]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewTaskPage, \"WuTNJKnqmkHK0KNTLuOf7XBPqLY=\");\n_c = NewTaskPage;\nexport default NewTaskPage;\nvar _c;\n$RefreshReg$(_c, \"NewTaskPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTaskPage","_s","nextId","setNextId","getNextTaskId","response","fetch","method","headers","data","json","next_id","error","console","log","tempId","tasks","setTasks","id","title","subtasks","subsubtasks","numSub","setNumSub","getCurrentUserId","token","localStorage","getItem","decodedToken","sub","identity","handleSubmit","event","preventDefault","userId","flattenedTasks","flatMap","task","parent_id","user_id","subtask","map","subsubtask","addSubTask","taskId","subtaskId","newSubtaskId","push","forEach","newsubsubtaskid","handleTaskChange","subsubtaskId","value","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","taskIndex","required","type","name","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst NewTaskPage = () => {\n    const [nextId, setNextId] = useState(10000000);\n    useEffect(() => {\n        const getNextTaskId = async () => {\n          try {\n            const response = await fetch('http://127.0.0.1:5000/next-id', {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n            });\n            const data = await response.json();\n            setNextId(data.next_id);\n          } catch (error) {\n            console.error('Failed to fetch nextId:', error);\n          }\n        };\n      \n        getNextTaskId();\n    \n      }, []); \n\n      useEffect(() => {\n        console.log('Next ID:', nextId);\n      }, [nextId]); // This effect runs whenever nextId changes\n\n\n    let tempId = 1000000\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([\n    { id: nextId, title: '', subtasks: [{ id: nextId, title: '', subsubtasks: [{ id: tempId, title: '' }] }] },\n  ]);\n    const [numSub, setNumSub] = useState(1);\n\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity; \n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n// Flatten tasks to include parent_id and user_id\nconst flattenedTasks = tasks.flatMap(task => [\n    { ...task, parent_id: null, user_id: userId },\n    ...task.subtasks.flatMap(subtask => [\n      { ...subtask, parent_id: task.id, user_id: userId },\n      ...subtask.subsubtasks.map(subsubtask => ({ ...subsubtask, parent_id: subtask.id, user_id: userId }))\n    ])\n  ]);\n      console.log('Flattened tasks:', flattenedTasks);\n    // try {\n    //   const response = await fetch('http://127.0.0.1:5000/new-list', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       // Include auth token if needed\n    //     },\n    //     body: JSON.stringify(flattenedTasks),\n    //   });\n\n    //   if (!response.ok) throw new Error('Network response was not ok.');\n    //   // Handle success\n    //   console.log('Tasks successfully submitted:', await response.json());\n    //   window.location.href = '/'; // Redirect to the dashboard\n    // } catch (error) {\n    //   console.error('Error submitting tasks:', error);\n    // }\n};\n    \n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          let newSubtaskId = taskId + numSub;\n          console.log('newSubtaskId:', newSubtaskId, numSub, taskId);\n          task.subtasks.push({ id: newSubtaskId, title: '', subsubtasks: [] });\n            setNumSub(numSub + 1);\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              let newsubsubtaskid = ++tempId;\n              subtask.subsubtasks.push({ id: newsubsubtaskid, title: '' });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  \n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  \n  return (\n    <>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n\n      <div className=\"new-task-page\">\n        <h2>Add New Task</h2>\n        <form onSubmit={handleSubmit}>\n          {tasks.map((task, taskIndex) => (\n            <div key={task.id}>\n              <input\n                required\n                type=\"text\"\n                name={`title-${task.id}`}\n                placeholder=\"Title\"\n                value={task.title}\n                onChange={(e) => handleTaskChange(task.id, null, null, e.target.value)}\n              />\n              <button type=\"button\" onClick={() => addSubTask(task.id)}>Add Subtask</button>\n\n              {task.subtasks.map((subtask) => (\n                <div key={subtask.id}>\n                  <input\n                    required\n                    type=\"text\"\n                    name={`title-${subtask.id}`}\n                    placeholder=\"Subtask Title\"\n                    value={subtask.title}\n                    onChange={(e) => handleTaskChange(task.id, subtask.id, null, e.target.value)}\n                  />\n                  <button type=\"button\" onClick={() => addSubTask(task.id, subtask.id)}>Add Sub-Subtask</button>\n\n                  {subtask.subsubtasks.map((subsubtask) => (\n                    <input\n                        key={subsubtask.id}\n                        required\n                        type=\"text\"\n                        name={`title-${subsubtask.id}`}\n                        placeholder=\"Sub-Subtask Title\"\n                        value={subsubtask.title}\n                        onChange={(e) => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)}\n                    />\n                ))}\n                </div>\n              ))}\n            </div>\n          ))}\n          <button type=\"submit\">Add Task</button>\n        </form>\n        </div>\n    </>\n    );\n};   \n\nexport default NewTaskPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EAC9CC,SAAS,CAAC,MAAM;IACZ,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UAC5DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,SAAS,CAACM,IAAI,CAACE,OAAO,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;EAEjB,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,MAAM,CAAC;EACjC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC;;EAGhB,IAAIa,MAAM,GAAG,OAAO;EACtB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CACjC;IAAE0B,EAAE,EAAEhB,MAAM;IAAEiB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,CAAC;MAAEF,EAAE,EAAEhB,MAAM;MAAEiB,KAAK,EAAE,EAAE;MAAEE,WAAW,EAAE,CAAC;QAAEH,EAAE,EAAEH,MAAM;QAAEI,KAAK,EAAE;MAAG,CAAC;IAAE,CAAC;EAAE,CAAC,CAC3G,CAAC;EACA,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMgC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,IAAI;IACvB,IAAI;MACF,MAAMG,YAAY,GAAGjC,SAAS,CAAC8B,KAAK,CAAC;MACrC,OAAOG,YAAY,CAACC,GAAG,CAACC,QAAQ;IAClC,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMmB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA,MAAMC,MAAM,GAAGV,gBAAgB,CAAC,CAAC,CAAC,CAAC;;IAEvC;IACA,MAAMW,cAAc,GAAGnB,KAAK,CAACoB,OAAO,CAACC,IAAI,IAAI,CACzC;MAAE,GAAGA,IAAI;MAAEC,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAEL;IAAO,CAAC,EAC7C,GAAGG,IAAI,CAACjB,QAAQ,CAACgB,OAAO,CAACI,OAAO,IAAI,CAClC;MAAE,GAAGA,OAAO;MAAEF,SAAS,EAAED,IAAI,CAACnB,EAAE;MAAEqB,OAAO,EAAEL;IAAO,CAAC,EACnD,GAAGM,OAAO,CAACnB,WAAW,CAACoB,GAAG,CAACC,UAAU,KAAK;MAAE,GAAGA,UAAU;MAAEJ,SAAS,EAAEE,OAAO,CAACtB,EAAE;MAAEqB,OAAO,EAAEL;IAAO,CAAC,CAAC,CAAC,CACtG,CAAC,CACH,CAAC;IACErB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEqB,cAAc,CAAC;IACjD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EAEC;EACA,MAAMQ,UAAU,GAAGA,CAACC,MAAM,EAAEC,SAAS,GAAG,IAAI,KAAK;IAC/C5B,QAAQ,CAACD,KAAK,CAACyB,GAAG,CAACJ,IAAI,IAAI;MACzB,IAAIA,IAAI,CAACnB,EAAE,KAAK0B,MAAM,EAAE;QACtB,IAAIC,SAAS,KAAK,IAAI,EAAE;UACtB,IAAIC,YAAY,GAAGF,MAAM,GAAGtB,MAAM;UAClCT,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEgC,YAAY,EAAExB,MAAM,EAAEsB,MAAM,CAAC;UAC1DP,IAAI,CAACjB,QAAQ,CAAC2B,IAAI,CAAC;YAAE7B,EAAE,EAAE4B,YAAY;YAAE3B,KAAK,EAAE,EAAE;YAAEE,WAAW,EAAE;UAAG,CAAC,CAAC;UAClEE,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;QACzB,CAAC,MAAM;UACLe,IAAI,CAACjB,QAAQ,CAAC4B,OAAO,CAACR,OAAO,IAAI;YAC/B,IAAIA,OAAO,CAACtB,EAAE,KAAK2B,SAAS,EAAE;cAC5B,IAAII,eAAe,GAAG,EAAElC,MAAM;cAC9ByB,OAAO,CAACnB,WAAW,CAAC0B,IAAI,CAAC;gBAAE7B,EAAE,EAAE+B,eAAe;gBAAE9B,KAAK,EAAE;cAAG,CAAC,CAAC;YAC9D;UACF,CAAC,CAAC;QACJ;MACF;MACA,OAAOkB,IAAI;IACb,CAAC,CAAC,CAAC;EACL,CAAC;;EAGD;EACA,MAAMa,gBAAgB,GAAGA,CAACN,MAAM,EAAEC,SAAS,EAAEM,YAAY,EAAEC,KAAK,KAAK;IACnEnC,QAAQ,CAACD,KAAK,CAACyB,GAAG,CAACJ,IAAI,IAAI;MACzB,IAAIA,IAAI,CAACnB,EAAE,KAAK0B,MAAM,EAAE;QACtB,IAAIC,SAAS,KAAK,IAAI,EAAE;UACtBR,IAAI,CAAClB,KAAK,GAAGiC,KAAK;QACpB,CAAC,MAAM;UACLf,IAAI,CAACjB,QAAQ,CAAC4B,OAAO,CAACR,OAAO,IAAI;YAC/B,IAAIA,OAAO,CAACtB,EAAE,KAAK2B,SAAS,EAAE;cAC5B,IAAIM,YAAY,KAAK,IAAI,EAAE;gBACzBX,OAAO,CAACrB,KAAK,GAAGiC,KAAK;cACvB,CAAC,MAAM;gBACLZ,OAAO,CAACnB,WAAW,CAAC2B,OAAO,CAACN,UAAU,IAAI;kBACxC,IAAIA,UAAU,CAACxB,EAAE,KAAKiC,YAAY,EAAE;oBAClCT,UAAU,CAACvB,KAAK,GAAGiC,KAAK;kBAC1B;gBACF,CAAC,CAAC;cACJ;YACF;UACF,CAAC,CAAC;QACJ;MACF;MACA,OAAOf,IAAI;IACb,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACExC,OAAA,CAAAE,SAAA;IAAAsD,QAAA,gBACExD,OAAA;MAAAwD,QAAA,eACExD,OAAA,CAACH,IAAI;QAAC4D,EAAE,EAAC,GAAG;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAEN7D,OAAA;MAAK8D,SAAS,EAAC,eAAe;MAAAN,QAAA,gBAC5BxD,OAAA;QAAAwD,QAAA,EAAI;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB7D,OAAA;QAAM+D,QAAQ,EAAE7B,YAAa;QAAAsB,QAAA,GAC1BrC,KAAK,CAACyB,GAAG,CAAC,CAACJ,IAAI,EAAEwB,SAAS,kBACzBhE,OAAA;UAAAwD,QAAA,gBACExD,OAAA;YACEiE,QAAQ;YACRC,IAAI,EAAC,MAAM;YACXC,IAAI,EAAG,SAAQ3B,IAAI,CAACnB,EAAG,EAAE;YACzB+C,WAAW,EAAC,OAAO;YACnBb,KAAK,EAAEf,IAAI,CAAClB,KAAM;YAClB+C,QAAQ,EAAGC,CAAC,IAAKjB,gBAAgB,CAACb,IAAI,CAACnB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAEiD,CAAC,CAACC,MAAM,CAAChB,KAAK;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC,eACF7D,OAAA;YAAQkE,IAAI,EAAC,QAAQ;YAACM,OAAO,EAAEA,CAAA,KAAM1B,UAAU,CAACN,IAAI,CAACnB,EAAE,CAAE;YAAAmC,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAE7ErB,IAAI,CAACjB,QAAQ,CAACqB,GAAG,CAAED,OAAO,iBACzB3C,OAAA;YAAAwD,QAAA,gBACExD,OAAA;cACEiE,QAAQ;cACRC,IAAI,EAAC,MAAM;cACXC,IAAI,EAAG,SAAQxB,OAAO,CAACtB,EAAG,EAAE;cAC5B+C,WAAW,EAAC,eAAe;cAC3Bb,KAAK,EAAEZ,OAAO,CAACrB,KAAM;cACrB+C,QAAQ,EAAGC,CAAC,IAAKjB,gBAAgB,CAACb,IAAI,CAACnB,EAAE,EAAEsB,OAAO,CAACtB,EAAE,EAAE,IAAI,EAAEiD,CAAC,CAACC,MAAM,CAAChB,KAAK;YAAE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9E,CAAC,eACF7D,OAAA;cAAQkE,IAAI,EAAC,QAAQ;cAACM,OAAO,EAAEA,CAAA,KAAM1B,UAAU,CAACN,IAAI,CAACnB,EAAE,EAAEsB,OAAO,CAACtB,EAAE,CAAE;cAAAmC,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAE7FlB,OAAO,CAACnB,WAAW,CAACoB,GAAG,CAAEC,UAAU,iBAClC7C,OAAA;cAEIiE,QAAQ;cACRC,IAAI,EAAC,MAAM;cACXC,IAAI,EAAG,SAAQtB,UAAU,CAACxB,EAAG,EAAE;cAC/B+C,WAAW,EAAC,mBAAmB;cAC/Bb,KAAK,EAAEV,UAAU,CAACvB,KAAM;cACxB+C,QAAQ,EAAGC,CAAC,IAAKjB,gBAAgB,CAACb,IAAI,CAACnB,EAAE,EAAEsB,OAAO,CAACtB,EAAE,EAAEwB,UAAU,CAACxB,EAAE,EAAEiD,CAAC,CAACC,MAAM,CAAChB,KAAK;YAAE,GANjFV,UAAU,CAACxB,EAAE;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOrB,CACJ,CAAC;UAAA,GArBQlB,OAAO,CAACtB,EAAE;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBf,CACN,CAAC;QAAA,GAnCMrB,IAAI,CAACnB,EAAE;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoCZ,CACN,CAAC,eACF7D,OAAA;UAAQkE,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACR,CAAC;AAEP,CAAC;AAACzD,EAAA,CArLID,WAAW;AAAAsE,EAAA,GAAXtE,WAAW;AAuLjB,eAAeA,WAAW;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Hierarchical Todo List App/src/pages/NewListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewListPage = ({\n  history\n}) => {\n  _s();\n  const [listName, setListName] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Assume you have a function to call your backend API to create the list\n    try {\n      await fetch('http://127.0.0.1:5000/create-list', {\n        // Update with your actual endpoint\n        method: 'POST',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n          // Include authorization header if your API requires it\n        },\n        body: JSON.stringify({\n          name: listName\n        })\n      });\n\n      // After successful creation, you might want to redirect the user\n      window.location.href = '/'; // Redirect to the home page\n    } catch (error) {\n      console.error('Failed to create the list:', error);\n      // Handle errors (e.g., display an error message)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"listName\",\n      children: \"List Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"listName\",\n      required: true,\n      placeholder: \"Enter list name\",\n      value: listName,\n      onChange: e => setListName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(NewListPage, \"mYAC1cwfenD5dFFyYZR4LXd4qjw=\");\n_c = NewListPage;\nexport default NewListPage;\nvar _c;\n$RefreshReg$(_c, \"NewListPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewListPage","history","_s","listName","setListName","handleSubmit","e","preventDefault","fetch","method","headers","localStorage","getItem","body","JSON","stringify","name","window","location","href","error","console","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","required","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Hierarchical Todo List App/src/pages/NewListPage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst NewListPage = ({ history }) => {\n  const [listName, setListName] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Assume you have a function to call your backend API to create the list\n    try {\n      await fetch('http://127.0.0.1:5000/create-list', { // Update with your actual endpoint\n        method: 'POST',\n        headers: {\n            'authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n          // Include authorization header if your API requires it\n        },\n        body: JSON.stringify({ name: listName }),\n      });\n\n      // After successful creation, you might want to redirect the user\n      window.location.href = '/'; // Redirect to the home page\n    } catch (error) {\n      console.error('Failed to create the list:', error);\n      // Handle errors (e.g., display an error message)\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='form'>\n      <label htmlFor=\"listName\">List Name:</label>\n        <br />\n      <input\n        type=\"text\"\n        id=\"listName\"\n        required\n        placeholder='Enter list name'\n        value={listName}\n        onChange={(e) => setListName(e.target.value)}\n      />\n        <br />\n      <button type=\"submit\">Create List</button>\n    </form>\n  );\n};\n\nexport default NewListPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAI;MACF,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAAE;QACjDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;UAC5D,cAAc,EAAE;UAChB;QACF,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEb;QAAS,CAAC;MACzC,CAAC,CAAC;;MAEF;MACAc,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EAED,oBACErB,OAAA;IAAMuB,QAAQ,EAAEjB,YAAa;IAACkB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAC5CzB,OAAA;MAAO0B,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1C9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACR9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,UAAU;MACbC,QAAQ;MACRC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAE/B,QAAS;MAChBgC,QAAQ,EAAG7B,CAAC,IAAKF,WAAW,CAACE,CAAC,CAAC8B,MAAM,CAACF,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACA9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACR9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CAzCIF,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
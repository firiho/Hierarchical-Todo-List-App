{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Hierarchical Todo List App/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport List from '../components/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await fetch('http://127.0.0.1:5000/lists', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          window.location.href = '/login'; // Redirect to login page if not authorized\n          //throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setTasks(data);\n        console.log('Tasks:', data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks();\n    // if token is not present, redirect to login page\n    if (!localStorage.getItem('token')) {\n      window.location.href = '/login';\n    }\n    const getLists = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await fetch('http://127.0.0.1:5000/get-lists', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          //window.location.href = '/login'; // Redirect to login page if not authorized\n          throw new Error('Network response was not ok');\n        } else {\n          const data = response.json();\n          setLists(data);\n          console.log('Lists:', lists);\n        }\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    getLists();\n  }, []);\n  const onEdit = (id, title) => {\n    const token = localStorage.getItem('token');\n    fetch('http://127.0.0.1:5000/edit-task', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        id,\n        title\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      // Update the local state to reflect the edited task\n      const updatedTasks = tasks.map(task => {\n        if (task.id === id) {\n          return {\n            ...task,\n            title\n          };\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n    }).catch(error => console.error('Error:', error));\n  };\n  const onDelete = id => {\n    const token = localStorage.getItem('token');\n    fetch(`http://127.0.0.1:5000/delete-task/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Delete successful:', data);\n      // Update local state to remove the deleted task\n      const remainingTasks = tasks.filter(task => task.id !== id);\n      setTasks(remainingTasks);\n    }).catch(error => console.error('Error:', error));\n  };\n  const renderTasks = tasks => {\n    // Group tasks by list_id\n    const groupedTasks = tasks.reduce((acc, task) => {\n      if (!acc[task.list_id]) acc[task.list_id] = [];\n      acc[task.list_id].push(task);\n      return acc;\n    }, {});\n\n    // Merge tasks with their respective lists\n    const listsWithTasks = listNames.map(list => ({\n      ...list,\n      tasks: groupedTasks[list.id] || [] // Ensures that lists without tasks get an empty array\n    }));\n    console.log(listsWithTasks);\n  };\n\n  //     lists = Object.values(groupedByListId).flat();\n  //     console.log('Tasks:', lists);\n  //     return lists.map(list => (\n  //         <div key={list.id}>\n  //             <List key={list.id} list={list} onEditTask={onEditTask} onDeleteTask={onDeleteTask} />\n  //             <Link to={`/new-task/${list.id}`}>Add New Task</Link>\n  //         </div> \n  //     ));    \n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/new-task/0\",\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"hLmXAUBJ6rlU4iqzEcMrvLtWDUM=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","List","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","tasks","setTasks","lists","setLists","fetchTasks","token","localStorage","getItem","response","fetch","headers","ok","window","location","href","data","json","console","log","error","getLists","Error","onEdit","id","title","method","body","JSON","stringify","then","updatedTasks","map","task","catch","onDelete","remainingTasks","filter","renderTasks","groupedTasks","reduce","acc","list_id","push","listsWithTasks","listNames","list","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Hierarchical Todo List App/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport List from '../components/List';\n\nconst HomePage = () => {\n    const [tasks, setTasks] = useState([]);\n    const [lists, setLists] = useState([]);\n    \n    useEffect(() => {\n        const fetchTasks = async () => {\n            const token = localStorage.getItem('token'); \n            try {\n                const response = await fetch('http://127.0.0.1:5000/lists', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n                if (!response.ok) {\n                    window.location.href = '/login'; // Redirect to login page if not authorized\n                    //throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setTasks(data);\n                console.log('Tasks:', data);\n            } catch (error) {\n                console.error(\"Error fetching tasks:\", error);\n            }\n        };\n\n        fetchTasks();\n        // if token is not present, redirect to login page\n        if (!localStorage.getItem('token')) {\n            window.location.href = '/login';\n        }\n\n        const getLists = async () => {\n            const token = localStorage.getItem('token');\n            try {\n                const response = await fetch('http://127.0.0.1:5000/get-lists', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n                if (!response.ok) {\n                    //window.location.href = '/login'; // Redirect to login page if not authorized\n                    throw new Error('Network response was not ok');\n                } else {\n                    const data = response.json();\n                    setLists(data);\n                    console.log('Lists:', lists);\n                }\n            } catch (error) {\n                console.error(\"Error fetching tasks:\", error);\n            }\n        };\n        getLists();\n    }, []);\n\n    const onEdit = (id, title) => {\n        const token = localStorage.getItem('token');\n        fetch('http://127.0.0.1:5000/edit-task', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ id, title }),\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log('Success:', data);\n            // Update the local state to reflect the edited task\n            const updatedTasks = tasks.map(task => {\n                if (task.id === id) {\n                    return { ...task, title };\n                }\n                return task;\n            });\n            setTasks(updatedTasks);\n        })\n        .catch(error => console.error('Error:', error));\n    };\n\n    const onDelete = (id) => {\n        const token = localStorage.getItem('token');\n        fetch(`http://127.0.0.1:5000/delete-task/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log('Delete successful:', data);\n            // Update local state to remove the deleted task\n            const remainingTasks = tasks.filter(task => task.id !== id);\n            setTasks(remainingTasks);\n        })\n        .catch(error => console.error('Error:', error));\n    };\n\n\n\n    const renderTasks = (tasks) => {\n        // Group tasks by list_id\nconst groupedTasks = tasks.reduce((acc, task) => {\n    if (!acc[task.list_id]) acc[task.list_id] = [];\n    acc[task.list_id].push(task);\n    return acc;\n  }, {});\n  \n  // Merge tasks with their respective lists\n  const listsWithTasks = listNames.map(list => ({\n    ...list,\n    tasks: groupedTasks[list.id] || [] // Ensures that lists without tasks get an empty array\n  }));\n  \n  console.log(listsWithTasks);\n};\n\n    //     lists = Object.values(groupedByListId).flat();\n    //     console.log('Tasks:', lists);\n    //     return lists.map(list => (\n    //         <div key={list.id}>\n    //             <List key={list.id} list={list} onEditTask={onEditTask} onDeleteTask={onDeleteTask} />\n    //             <Link to={`/new-task/${list.id}`}>Add New Task</Link>\n    //         </div> \n    //     ));    \n    // };\n    \n    return (\n        <>\n            <nav>\n                <Link to=\"/new-task/0\">Add New Task</Link>\n            </nav>\n            <div className=\"home-page\">\n                <h2>Lists</h2>\n                <div className=\"tasks\">\n                    {/* {renderTasks(tasks)} */}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
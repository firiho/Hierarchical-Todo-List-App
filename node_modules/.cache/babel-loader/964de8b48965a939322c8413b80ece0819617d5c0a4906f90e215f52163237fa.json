{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Corrected import for jwt-decode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTaskPage = () => {\n  _s();\n  // if token is not present, redirect to login page\n  if (!localStorage.getItem('token')) {\n    window.location.href = '/login';\n  }\n  const [nextId, setNextId] = useState(10000000);\n  const [isLoading, setIsLoading] = useState(true);\n  const [numSub, setNumSub] = useState(1);\n  useEffect(() => {\n    const getNextTaskId = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://127.0.0.1:5000/next-id', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setNextId(data.next_id);\n          setIsLoading(false); // Update loading state based on data fetch\n        } else {\n          throw new Error('Network response was not ok.');\n        }\n      } catch (error) {\n        console.error('Failed to fetch nextId:', error);\n      } finally {\n        setIsLoading(false); // Correctly updating state, not a hook call\n      }\n    };\n    getNextTaskId();\n  }, []);\n  useEffect(() => {\n    console.log('Next ID:', nextId);\n  }, [nextId]);\n  let tempId = 100000000;\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([{\n    id: nextId,\n    title: '',\n    subtasks: [{\n      id: nextId + 1,\n      title: '',\n      subsubtasks: [{\n        id: tempId,\n        title: ''\n      }]\n    }]\n  }]);\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity;\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    let currentId = nextId; // Initialize currentId with the base ID provided\n\n    const flattenedTasks = tasks.flatMap(task => {\n      const mainTask = {\n        ...task,\n        parent_id: null,\n        user_id: userId\n      };\n      let subTasksFlattened = task.subtasks.flatMap((subtask, index) => {\n        // Assign a provisional parent_id for subtasks as if they are sequential from nextId\n        let subTaskWithNewParentId = {\n          ...subtask,\n          parent_id: currentId,\n          user_id: userId\n        };\n        let subSubTasksFlattened = subtask.subsubtasks.map((subsubtask, subIndex) => {\n          // Sub-subtasks parent_id follows their parent subtask's assumed new ID\n          return {\n            ...subsubtask,\n            parent_id: currentId + index + 1,\n            user_id: userId\n          };\n        });\n        return [subTaskWithNewParentId, ...subSubTasksFlattened];\n      });\n      return [mainTask, ...subTasksFlattened];\n    });\n    console.log('Flattened tasks:', flattenedTasks);\n    // try {\n    //   const response = await fetch('http://127.0.0.1:5000/new-list', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       // Include auth token if needed\n    //     },\n    //     body: JSON.stringify(flattenedTasks),\n    //   });\n\n    //   if (!response.ok) throw new Error('Network response was not ok.');\n    //   // Handle success\n    //   console.log('Tasks successfully submitted:', await response.json());\n    //   window.location.href = '/'; // Redirect to the dashboard\n    // } catch (error) {\n    //   console.error('Error submitting tasks:', error);\n    // }\n  };\n\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = tempId + numSub;\n          console.log('newSubtaskId:', newSubtaskId);\n          task.subtasks.push({\n            id: newSubtaskId,\n            title: '',\n            subsubtasks: []\n          });\n          setNumSub(numSub + 1);\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newsubsubtaskid = tempId + numSub;\n              console.log('newsubsubtaskid:', newsubsubtaskid);\n              subtask.subsubtasks.push({\n                id: newsubsubtaskid,\n                title: ''\n              });\n              setNumSub(numSub + 1);\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: `title-${task.id}`,\n            placeholder: \"Title\",\n            value: task.title,\n            onChange: e => handleTaskChange(task.id, null, null, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addSubTask(task.id),\n            children: \"Add Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subtask.id}`,\n              placeholder: \"Subtask Title\",\n              value: subtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, null, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addSubTask(task.id, subtask.id),\n              children: \"Add Sub-Subtask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), subtask.subsubtasks.map(subsubtask => /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subsubtask.id}`,\n              placeholder: \"Sub-Subtask Title\",\n              value: subsubtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)\n            }, subsubtask.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this))]\n          }, subtask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this))]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewTaskPage, \"5WpbSO/GgpCm2jTFL/zPKAtnOYw=\");\n_c = NewTaskPage;\nexport default NewTaskPage;\nvar _c;\n$RefreshReg$(_c, \"NewTaskPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTaskPage","_s","localStorage","getItem","window","location","href","nextId","setNextId","isLoading","setIsLoading","numSub","setNumSub","getNextTaskId","response","fetch","method","headers","ok","data","json","next_id","Error","error","console","log","tempId","tasks","setTasks","id","title","subtasks","subsubtasks","getCurrentUserId","token","decodedToken","sub","identity","handleSubmit","event","preventDefault","userId","currentId","flattenedTasks","flatMap","task","mainTask","parent_id","user_id","subTasksFlattened","subtask","index","subTaskWithNewParentId","subSubTasksFlattened","map","subsubtask","subIndex","addSubTask","taskId","subtaskId","newSubtaskId","push","forEach","newsubsubtaskid","handleTaskChange","subsubtaskId","value","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","taskIndex","required","type","name","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Corrected import for jwt-decode\n\nconst NewTaskPage = () => {\n    // if token is not present, redirect to login page\n    if (!localStorage.getItem('token')) {\n        window.location.href = '/login';\n    }\n  const [nextId, setNextId] = useState(10000000); \n  const [isLoading, setIsLoading] = useState(true); \n  const [numSub, setNumSub] = useState(1);\n\n  useEffect(() => {\n    const getNextTaskId = async () => {\n        setIsLoading(true);\n      try {\n        const response = await fetch('http://127.0.0.1:5000/next-id', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n        if (response.ok) {\n        const data = await response.json();\n        setNextId(data.next_id);\n        setIsLoading(false); // Update loading state based on data fetch\n        } else {\n          throw new Error('Network response was not ok.');\n        }\n      } catch (error) {\n        console.error('Failed to fetch nextId:', error);\n      } finally {\n        setIsLoading(false); // Correctly updating state, not a hook call\n      }\n    };\n\n    getNextTaskId();\n  }, []);\n\n  useEffect(() => {\n    console.log('Next ID:', nextId);\n  }, [nextId]);\n\n\n\n    let tempId = 100000000;\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([\n    { id: nextId, title: '', subtasks: [{ id: nextId + 1, title: '', subsubtasks: [{ id: tempId, title: '' }] }] },\n  ]);\n\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity; \n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    let currentId = nextId; // Initialize currentId with the base ID provided\n\n    const flattenedTasks = tasks.flatMap(task => {\n        const mainTask = { ...task, parent_id: null, user_id: userId };\n        let subTasksFlattened = task.subtasks.flatMap((subtask, index) => {\n            // Assign a provisional parent_id for subtasks as if they are sequential from nextId\n            let subTaskWithNewParentId = { ...subtask, parent_id: currentId, user_id: userId };\n            let subSubTasksFlattened = subtask.subsubtasks.map((subsubtask, subIndex) => {\n                // Sub-subtasks parent_id follows their parent subtask's assumed new ID\n                return { ...subsubtask, parent_id: currentId + index + 1, user_id: userId };\n            });\n            return [subTaskWithNewParentId, ...subSubTasksFlattened];\n        });\n        return [mainTask, ...subTasksFlattened];\n    });\n    \n      console.log('Flattened tasks:', flattenedTasks);\n    // try {\n    //   const response = await fetch('http://127.0.0.1:5000/new-list', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       // Include auth token if needed\n    //     },\n    //     body: JSON.stringify(flattenedTasks),\n    //   });\n\n    //   if (!response.ok) throw new Error('Network response was not ok.');\n    //   // Handle success\n    //   console.log('Tasks successfully submitted:', await response.json());\n    //   window.location.href = '/'; // Redirect to the dashboard\n    // } catch (error) {\n    //   console.error('Error submitting tasks:', error);\n    // }\n};\n    \n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = tempId + numSub;\n          console.log('newSubtaskId:', newSubtaskId);\n          task.subtasks.push({ id: newSubtaskId, title: '', subsubtasks: [] });\n            setNumSub(numSub + 1);\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newsubsubtaskid = tempId + numSub;\n                console.log('newsubsubtaskid:', newsubsubtaskid);\n              subtask.subsubtasks.push({ id: newsubsubtaskid, title: '' });\n              setNumSub(numSub + 1);\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  \n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  \n  return (\n    <>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n\n      <div className=\"new-task-page\">\n        <h2>Add New Task</h2>\n        <form onSubmit={handleSubmit}>\n          {tasks.map((task, taskIndex) => (\n            <div key={task.id}>\n              <input\n                required\n                type=\"text\"\n                name={`title-${task.id}`}\n                placeholder=\"Title\"\n                value={task.title}\n                onChange={(e) => handleTaskChange(task.id, null, null, e.target.value)}\n              />\n              <button type=\"button\" onClick={() => addSubTask(task.id)}>Add Subtask</button>\n\n              {task.subtasks.map((subtask) => (\n                <div key={subtask.id}>\n                  <input\n                    required\n                    type=\"text\"\n                    name={`title-${subtask.id}`}\n                    placeholder=\"Subtask Title\"\n                    value={subtask.title}\n                    onChange={(e) => handleTaskChange(task.id, subtask.id, null, e.target.value)}\n                  />\n                  <button type=\"button\" onClick={() => addSubTask(task.id, subtask.id)}>Add Sub-Subtask</button>\n\n                  {subtask.subsubtasks.map((subsubtask) => (\n                    <input\n                        key={subsubtask.id}\n                        required\n                        type=\"text\"\n                        name={`title-${subsubtask.id}`}\n                        placeholder=\"Sub-Subtask Title\"\n                        value={subsubtask.title}\n                        onChange={(e) => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)}\n                    />\n                ))}\n                </div>\n              ))}\n            </div>\n          ))}\n          <button type=\"submit\">Add Task</button>\n        </form>\n        </div>\n    </>\n    );\n};   \n\nexport default NewTaskPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
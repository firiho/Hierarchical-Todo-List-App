{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTaskPage = () => {\n  _s();\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: '',\n    subtasks: [{\n      id: 1.1,\n      title: '',\n      subsubtasks: [{\n        id: 1.11,\n        title: ''\n      }]\n    }]\n  }]);\n  const [nextId, setNextId] = useState();\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity;\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const getNextTaskId = () => {\n      return fetch('http://127.0.0.1:5000/next-id', {\n        // Ensure the URL matches your Flask route\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => data.next_id); // Assuming the response JSON contains `next_id`\n    };\n    getNextTaskId().then(id => setNextId(id));\n    console.log('The next id should be', nextId);\n  }, [nextId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    // Flatten tasks to include parent_id and user_id\n    const flattenedTasks = tasks.flatMap(task => {\n      const mainTask = {\n        ...task,\n        parent_id: null,\n        user_id: userId\n      };\n      let currentId = nextId + 2;\n      let subTasksFlattened = task.subtasks.flatMap(subtask => {\n        let subTaskWithNewParentId = {\n          ...subtask,\n          parent_id: nextId + 1,\n          user_id: userId\n        };\n        let subSubTasksFlattened = subtask.subsubtasks.map(subsubtask => {\n          return {\n            ...subsubtask,\n            parent_id: currentId,\n            user_id: userId\n          }; // Assuming subtask ID is sequential\n        });\n        currentId += 1;\n        return [subTaskWithNewParentId, ...subSubTasksFlattened];\n      });\n      return [mainTask, ...subTasksFlattened];\n    });\n    console.log('Flattened tasks:', flattenedTasks);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/new-list', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n          // Include auth token if needed\n        },\n        body: JSON.stringify(flattenedTasks)\n      });\n      if (!response.ok) throw new Error('Network response was not ok.');\n      // Handle success\n      console.log('Tasks successfully submitted:', await response.json());\n      window.location.href = '/'; // Redirect to the dashboard\n    } catch (error) {\n      console.error('Error submitting tasks:', error);\n    }\n  };\n  const tempId = 1000000;\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = tempId + 1;\n          task.subtasks.push({\n            id: newSubtaskId,\n            title: '',\n            subsubtasks: []\n          });\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newSubSubtaskId = tempId + 1;\n              subtask.subsubtasks.push({\n                id: newSubSubtaskId,\n                title: ''\n              });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: `title-${task.id}`,\n            placeholder: \"Title\",\n            value: task.title,\n            onChange: e => handleTaskChange(task.id, null, null, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addSubTask(task.id),\n            children: \"Add Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subtask.id}`,\n              placeholder: \"Subtask Title\",\n              value: subtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, null, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addSubTask(task.id, subtask.id),\n              children: \"Add Sub-Subtask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), subtask.subsubtasks.map(subsubtask => /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              name: `title-${subsubtask.id}`,\n              placeholder: \"Sub-Subtask Title\",\n              value: subsubtask.title,\n              onChange: e => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)\n            }, subsubtask.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this))]\n          }, subtask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this))]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewTaskPage, \"pnlYyyNoLTbVaUrTxJqsUFQq1Ks=\");\n_c = NewTaskPage;\nexport default NewTaskPage;\nvar _c;\n$RefreshReg$(_c, \"NewTaskPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTaskPage","_s","tasks","setTasks","id","title","subtasks","subsubtasks","nextId","setNextId","getCurrentUserId","token","localStorage","getItem","decodedToken","sub","identity","error","console","getNextTaskId","fetch","method","headers","then","response","json","data","next_id","log","handleSubmit","event","preventDefault","userId","flattenedTasks","flatMap","task","mainTask","parent_id","user_id","currentId","subTasksFlattened","subtask","subTaskWithNewParentId","subSubTasksFlattened","map","subsubtask","body","JSON","stringify","ok","Error","window","location","href","tempId","addSubTask","taskId","subtaskId","newSubtaskId","push","forEach","newSubSubtaskId","handleTaskChange","subsubtaskId","value","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","taskIndex","required","type","name","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Volumes/LaCie/Code/Kanban Web Application/src/pages/NewTaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst NewTaskPage = () => {\n  // State to hold the main task and its subtasks\n  const [tasks, setTasks] = useState([\n    { id: 1, title: '', subtasks: [{ id: 1.1, title: '', subsubtasks: [{ id: 1.11, title: '' }] }] },\n  ]);\n  const [nextId, setNextId] = useState();\n  const getCurrentUserId = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n  \n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub.identity; \n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n\n  useEffect(() => {\n  const getNextTaskId = () => {\n    return fetch('http://127.0.0.1:5000/next-id', { // Ensure the URL matches your Flask route\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n    .then(response => response.json())\n    .then(data => data.next_id); // Assuming the response JSON contains `next_id`\n};\n    getNextTaskId().then(id => setNextId(id));\n    console.log('The next id should be', nextId);\n  }, [nextId]);\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Assuming you have a way to get the current user's ID\n    const userId = getCurrentUserId(); // You need to implement this based on your auth system\n\n    // Flatten tasks to include parent_id and user_id\n    const flattenedTasks = tasks.flatMap(task => {\n        const mainTask = { ...task, parent_id: null, user_id: userId };\n        let currentId = nextId + 2;\n        let subTasksFlattened = task.subtasks.flatMap(subtask => {\n          let subTaskWithNewParentId = { ...subtask, parent_id: nextId + 1, user_id: userId };\n          \n          let subSubTasksFlattened = subtask.subsubtasks.map(subsubtask => {\n            return { ...subsubtask, parent_id: currentId, user_id: userId }; // Assuming subtask ID is sequential\n          });\n          currentId += 1;\n          return [subTaskWithNewParentId, ...subSubTasksFlattened];\n        });\n      \n        return [mainTask, ...subTasksFlattened];\n      });\n      console.log('Flattened tasks:', flattenedTasks);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/new-list', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // Include auth token if needed\n        },\n        body: JSON.stringify(flattenedTasks),\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok.');\n      // Handle success\n      console.log('Tasks successfully submitted:', await response.json());\n      window.location.href = '/'; // Redirect to the dashboard\n    } catch (error) {\n      console.error('Error submitting tasks:', error);\n    }\n};\n    const tempId = 1000000\n  // Function to add a new subtask or sub-subtask\n  const addSubTask = (taskId, subtaskId = null) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          const newSubtaskId = tempId + 1;\n          task.subtasks.push({ id: newSubtaskId, title: '', subsubtasks: [] });\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              const newSubSubtaskId = tempId + 1;\n              subtask.subsubtasks.push({ id: newSubSubtaskId, title: '' });\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  // Function to handle task title change\n  const handleTaskChange = (taskId, subtaskId, subsubtaskId, value) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        if (subtaskId === null) {\n          task.title = value;\n        } else {\n          task.subtasks.forEach(subtask => {\n            if (subtask.id === subtaskId) {\n              if (subsubtaskId === null) {\n                subtask.title = value;\n              } else {\n                subtask.subsubtasks.forEach(subsubtask => {\n                  if (subsubtask.id === subsubtaskId) {\n                    subsubtask.title = value;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n      return task;\n    }));\n  };\n\n  return (\n    <>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n\n      <div className=\"new-task-page\">\n        <h2>Add New Task</h2>\n        <form onSubmit={handleSubmit}>\n          {tasks.map((task, taskIndex) => (\n            <div key={task.id}>\n              <input\n                required\n                type=\"text\"\n                name={`title-${task.id}`}\n                placeholder=\"Title\"\n                value={task.title}\n                onChange={(e) => handleTaskChange(task.id, null, null, e.target.value)}\n              />\n              <button type=\"button\" onClick={() => addSubTask(task.id)}>Add Subtask</button>\n\n              {task.subtasks.map((subtask) => (\n                <div key={subtask.id}>\n                  <input\n                    required\n                    type=\"text\"\n                    name={`title-${subtask.id}`}\n                    placeholder=\"Subtask Title\"\n                    value={subtask.title}\n                    onChange={(e) => handleTaskChange(task.id, subtask.id, null, e.target.value)}\n                  />\n                  <button type=\"button\" onClick={() => addSubTask(task.id, subtask.id)}>Add Sub-Subtask</button>\n\n                  {subtask.subsubtasks.map((subsubtask) => (\n                    <input\n                      key={subsubtask.id}\n                      required\n                      type=\"text\"\n                      name={`title-${subsubtask.id}`}\n                      placeholder=\"Sub-Subtask Title\"\n                      value={subsubtask.title}\n                      onChange={(e) => handleTaskChange(task.id, subtask.id, subsubtask.id, e.target.value)}\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n          ))}\n          <button type=\"submit\">Add Task</button>\n        </form>\n        </div>\n    </>\n    );\n};   \n\nexport default NewTaskPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}